{"ast":null,"code":"var _jsxFileName = \"/home/leni/Repos/Courses/React/fold/flashcards/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(FlashCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst questions = [{\n  id: 3457,\n  question: \"What language is React based on?\",\n  answer: \"JavaScript\"\n}, {\n  id: 7336,\n  question: \"What are the building blocks of React apps?\",\n  answer: \"Components\"\n}, {\n  id: 8832,\n  question: \"What's the name of the syntax we use to describe a UI in React?\",\n  answer: \"JSX\"\n}, {\n  id: 1297,\n  question: \"How to pass data from parent to child components?\",\n  answer: \"Props\"\n}, {\n  id: 9103,\n  question: \"How to give components memory?\",\n  answer: \"useState hook\"\n}, {\n  id: 2002,\n  question: \"What do we call an input element that is completely synchronised with state?\",\n  answer: \"Controlled element\"\n}];\nfunction FlashCards() {\n  _s();\n  const [selectedId, setSelectedId] = useState(-1);\n  function handleClick(id) {\n    setSelectedId(id !== selectedId ? id : -1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcards\",\n    children: questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleClick(q.id),\n      className: q.id === selectedId ? \"selected\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: q.id === selectedId ? q.answer : q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, q.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCards, \"uP6dmr7bbyBduAWv8x+dUhiqUGw=\");\n_c2 = FlashCards;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"FlashCards\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","className","children","FlashCards","fileName","_jsxFileName","lineNumber","columnNumber","_c","questions","id","question","answer","_s","selectedId","setSelectedId","handleClick","map","q","onClick","_c2","$RefreshReg$"],"sources":["/home/leni/Repos/Courses/React/fold/flashcards/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <FlashCards />\n    </div>\n  );\n}\n\nconst questions = [\n  {\n    id: 3457,\n    question: \"What language is React based on?\",\n    answer: \"JavaScript\",\n  },\n  {\n    id: 7336,\n    question: \"What are the building blocks of React apps?\",\n    answer: \"Components\",\n  },\n  {\n    id: 8832,\n    question: \"What's the name of the syntax we use to describe a UI in React?\",\n    answer: \"JSX\",\n  },\n  {\n    id: 1297,\n    question: \"How to pass data from parent to child components?\",\n    answer: \"Props\",\n  },\n  {\n    id: 9103,\n    question: \"How to give components memory?\",\n    answer: \"useState hook\",\n  },\n  {\n    id: 2002,\n    question:\n      \"What do we call an input element that is completely synchronised with state?\",\n    answer: \"Controlled element\",\n  },\n];\n\nfunction FlashCards() {\n  const [selectedId, setSelectedId] = useState(-1);\n\n  function handleClick(id: number) {\n    setSelectedId(id !== selectedId ? id : -1);\n  }\n\n  return (\n    <div className=\"flashcards\">\n      {questions.map((q) => (\n        <div\n          key={q.id}\n          onClick={() => handleClick(q.id)}\n          className={q.id === selectedId ? \"selected\" : \"\"}\n        >\n          <p>{q.id === selectedId ? q.answer : q.question}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA,CAACI,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACC,EAAA,GANuBR,GAAG;AAQ3B,MAAMS,SAAS,GAAG,CAChB;EACEC,EAAE,EAAE,IAAI;EACRC,QAAQ,EAAE,kCAAkC;EAC5CC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,QAAQ,EAAE,6CAA6C;EACvDC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,QAAQ,EAAE,iEAAiE;EAC3EC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,QAAQ,EAAE,mDAAmD;EAC7DC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,QAAQ,EAAE,gCAAgC;EAC1CC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,QAAQ,EACN,8EAA8E;EAChFC,MAAM,EAAE;AACV,CAAC,CACF;AAED,SAAST,UAAUA,CAAA,EAAG;EAAAU,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,SAASmB,WAAWA,CAACN,EAAU,EAAE;IAC/BK,aAAa,CAACL,EAAE,KAAKI,UAAU,GAAGJ,EAAE,GAAG,CAAC,CAAC,CAAC;EAC5C;EAEA,oBACEX,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBO,SAAS,CAACQ,GAAG,CAAEC,CAAC,iBACfnB,OAAA;MAEEoB,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAACE,CAAC,CAACR,EAAE,CAAE;MACjCT,SAAS,EAAEiB,CAAC,CAACR,EAAE,KAAKI,UAAU,GAAG,UAAU,GAAG,EAAG;MAAAZ,QAAA,eAEjDH,OAAA;QAAAG,QAAA,EAAIgB,CAAC,CAACR,EAAE,KAAKI,UAAU,GAAGI,CAAC,CAACN,MAAM,GAAGM,CAAC,CAACP;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GAJ/CW,CAAC,CAACR,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACM,EAAA,CApBQV,UAAU;AAAAiB,GAAA,GAAVjB,UAAU;AAAA,IAAAK,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}